{"version":3,"sources":["MaterialTopTabView.tsx"],"names":["MaterialTopTabView","pager","lazyPlaceholder","tabBar","props","tabBarOptions","state","navigation","descriptors","sceneContainerStyle","rest","colors","renderTabBar","index","dispatch","TabActions","jumpTo","routes","name","target","key","route","render","emit","type","backgroundColor","background"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAMA;;;;;;;;;;;;;;;;;;;;AAee,SAASA,kBAAT,OAUL;AAAA,MAViC;AACzCC,IAAAA,KADyC;AAEzCC,IAAAA,eAFyC;AAGzCC,IAAAA,MAAM,GAAIC,KAAD,IAAmC,oBAAC,0BAAD,EAAuBA,KAAvB,CAHH;AAIzCC,IAAAA,aAJyC;AAKzCC,IAAAA,KALyC;AAMzCC,IAAAA,UANyC;AAOzCC,IAAAA,WAPyC;AAQzCC,IAAAA;AARyC,GAUjC;AAAA,MADLC,IACK;;AACR,QAAM;AAAEC,IAAAA;AAAF,MAAa,uBAAnB;;AAEA,QAAMC,YAAY,GAAIR,KAAD,IAA+B;AAClD,WAAOD,MAAM,mBACRE,aADQ,MAERD,KAFQ;AAGXE,MAAAA,KAAK,EAAEA,KAHI;AAIXC,MAAAA,UAAU,EAAEA,UAJD;AAKXC,MAAAA,WAAW,EAAEA;AALF,OAAb;AAOD,GARD;;AAUA,SACE,oBAAC,2BAAD,eACME,IADN;AAEE,IAAA,aAAa,EAAEG,KAAK,IAClBN,UAAU,CAACO,QAAX,mBACKC,mBAAWC,MAAX,CAAkBV,KAAK,CAACW,MAAN,CAAaJ,KAAb,EAAoBK,IAAtC,CADL;AAEEC,MAAAA,MAAM,EAAEb,KAAK,CAACc;AAFhB,OAHJ;AAQE,IAAA,WAAW,EAAE;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,aAAeb,WAAW,CAACa,KAAK,CAACD,GAAP,CAAX,CAAuBE,MAAvB,EAAf;AAAA,KARf;AASE,IAAA,eAAe,EAAEhB,KATnB;AAUE,IAAA,YAAY,EAAEM,YAVhB;AAWE,IAAA,WAAW,EAAEX,KAXf;AAYE,IAAA,qBAAqB,EAAEC,eAZzB;AAaE,IAAA,YAAY,EAAE,MAAMK,UAAU,CAACgB,IAAX,CAAgB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAhB,CAbtB;AAcE,IAAA,UAAU,EAAE,MAAMjB,UAAU,CAACgB,IAAX,CAAgB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAhB,CAdpB;AAeE,IAAA,mBAAmB,EAAE,CACnB;AAAEC,MAAAA,eAAe,EAAEd,MAAM,CAACe;AAA1B,KADmB,EAEnBjB,mBAFmB;AAfvB,KADF;AAsBD","sourcesContent":["import * as React from 'react';\nimport { TabView, SceneRendererProps } from 'react-native-tab-view';\nimport {\n  TabNavigationState,\n  TabActions,\n  useTheme,\n} from '@react-navigation/native';\n\nimport MaterialTopTabBar from './MaterialTopTabBar';\nimport {\n  MaterialTopTabDescriptorMap,\n  MaterialTopTabNavigationConfig,\n  MaterialTopTabNavigationHelpers,\n  MaterialTopTabBarProps,\n} from '../types';\n\ntype Props = MaterialTopTabNavigationConfig & {\n  state: TabNavigationState;\n  navigation: MaterialTopTabNavigationHelpers;\n  descriptors: MaterialTopTabDescriptorMap;\n  tabBarPosition?: 'top' | 'bottom';\n};\n\nexport default function MaterialTopTabView({\n  pager,\n  lazyPlaceholder,\n  tabBar = (props: MaterialTopTabBarProps) => <MaterialTopTabBar {...props} />,\n  tabBarOptions,\n  state,\n  navigation,\n  descriptors,\n  sceneContainerStyle,\n  ...rest\n}: Props) {\n  const { colors } = useTheme();\n\n  const renderTabBar = (props: SceneRendererProps) => {\n    return tabBar({\n      ...tabBarOptions,\n      ...props,\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors,\n    });\n  };\n\n  return (\n    <TabView\n      {...rest}\n      onIndexChange={index =>\n        navigation.dispatch({\n          ...TabActions.jumpTo(state.routes[index].name),\n          target: state.key,\n        })\n      }\n      renderScene={({ route }) => descriptors[route.key].render()}\n      navigationState={state}\n      renderTabBar={renderTabBar}\n      renderPager={pager}\n      renderLazyPlaceholder={lazyPlaceholder}\n      onSwipeStart={() => navigation.emit({ type: 'swipeStart' })}\n      onSwipeEnd={() => navigation.emit({ type: 'swipeEnd' })}\n      sceneContainerStyle={[\n        { backgroundColor: colors.background },\n        sceneContainerStyle,\n      ]}\n    />\n  );\n}\n"]}